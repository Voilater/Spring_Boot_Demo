name: Deploy Spring Boot Application to EC2

on:
  push:
    branches:
      - main  # Adjust to the branch you want to deploy from (e.g., 'main' or 'master')

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'  # Specify Java version 21
          distribution: 'adoptopenjdk'

      # Step 3: Build the Spring Boot application using Maven
      - name: Build Spring Boot Application with Maven
        run: |
          ./mvnw clean package -DskipTests  # Builds the JAR file, skipping tests to speed up the process

      # Step 4: Set up SSH agent for EC2 connection
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      # Step 5: Copy the JAR file to the EC2 instance
      - name: Copy JAR file to EC2
        run: |
          # Copy the packaged JAR file to the EC2 instance
          scp -o StrictHostKeyChecking=no target/*.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DEPLOY_DIR }}

      # Step 6: SSH into EC2 and run the application
      - name: Run Spring Boot Application on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_DIR }}
            # Stop any running instance of the app (if applicable)
            pkill -f 'java -jar' || true
            # Run the newly built Spring Boot application
            nohup java -jar *.jar > app.log 2>&1 &
          EOF
